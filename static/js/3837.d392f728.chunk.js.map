{"version":3,"file":"static/js/3837.d392f728.chunk.js","mappings":"uOAoCA,EA1Be,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,SACd,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,SAACA,EAAA,QAAD,CAAYC,GAAG,KAAKC,UAAU,OAA9B,qBAGA,SAACF,EAAA,OAAD,CAAWE,UAAU,aAArB,4HAIA,SAACC,EAAA,EAAD,WACMJ,GAAY,IAAIK,KAAI,SAACC,EAAOC,GAC1B,OACI,UAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGP,UAAU,cAA7B,WACI,gBAAKA,UAAWQ,GAAAA,CAAW,UAAW,MAAO,MAAQL,MACrD,wBAAKA,MAFuCC,EAAMK,uBCgClF,EA9CoB,SAAC,GAAoC,IAAlCZ,EAAiC,EAAjCA,SACnB,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,SAACA,EAAA,QAAD,CAAYC,GAAG,KAAKC,UAAU,OAA9B,yBAGA,UAACF,EAAA,OAAD,CAAWE,UAAU,aAArB,mFAC2E,KACvE,mCACS,IADT,0DACqE,WAGzE,SAACC,EAAA,EAAD,WACMJ,GAAY,IAAIK,KAAI,SAACC,EAAOC,GAC1B,OACI,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGP,UAAU,cAA7B,UACI,gBAAKA,UAAWQ,GAAAA,CAAW,UAAW,MAAO,OAAQ,UAAW,MAAQL,GAAxE,UACI,gBAAIH,UAAU,aAAd,iBAAgCG,QAFQC,EAAMK,kBAQlE,UAACX,EAAA,OAAD,CAAWE,UAAU,kBAArB,wFACgF,KAC5E,wCACc,IADd,0DAC0E,WAG9E,SAACC,EAAA,EAAD,WACMJ,GAAY,IAAIK,KAAI,SAACC,EAAOC,GAC1B,OACI,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGP,UAAU,cAA7B,UACI,gBAAKA,UAAWQ,GAAAA,CAAW,UAAW,MAAO,OAAQ,UAAW,WAAaL,GAA7E,UACI,gBAAIH,UAAWQ,GAAAA,CAAW,QAAUL,EAAO,QAA3C,sBAA8DA,QAFtBC,EAAMK,uBCLlF,EA5BmB,SAAC,GAAmC,IAAjCZ,EAAgC,EAAhCA,SAClB,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,SAACA,EAAA,QAAD,CAAYC,GAAG,KAAKC,UAAU,OAA9B,0BAGA,UAACF,EAAA,OAAD,CAAWE,UAAU,aAArB,8DACsD,KAClD,qCACW,IADX,0DACuE,WAG3E,SAACC,EAAA,EAAD,WACMJ,GAAY,IAAIK,KAAI,SAACC,EAAOC,GAC1B,OACI,UAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGP,UAAU,cAA7B,WACI,gBAAKA,UAAU,0BACf,gBAAIA,UAAWQ,GAAAA,CAAW,QAAUL,GAApC,mBAAmDA,OAFPC,EAAMK,uBCd5EZ,EAAsB,CAAC,UAAW,YAAa,UAAW,SAAU,UAAW,QAkBrF,EAhBsB,WAClB,OACI,SAAC,IAAD,WACI,SAACQ,EAAA,EAAD,CAAKE,GAAI,GAAIG,GAAI,EAAjB,UACI,SAACT,EAAA,EAAD,WACI,UAACI,EAAA,EAAD,CAAKM,GAAI,GAAT,WACI,SAAC,EAAD,CAAQd,SAAUA,KAClB,SAAC,EAAD,CAAaA,SAAUA,KACvB,SAAC,EAAD,CAAYA,SAAUA","sources":["pages/docs/Colors/Colors.tsx","pages/docs/Colors/Backgrounds.tsx","pages/docs/Colors/TextColors.tsx","pages/docs/Colors/index.tsx"],"sourcesContent":["import { Card, Col, Row } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// types\r\nimport { Variant } from '../types';\r\n\r\ntype ColorsProps = {\r\n    variants: Variant[];\r\n};\r\n\r\nconst Colors = ({ variants }: ColorsProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title as=\"h4\" className=\"my-0\">\r\n                    Colors\r\n                </Card.Title>\r\n                <Card.Text className=\"sub-header\">\r\n                    These are primary theme colors.They are used for all the elements including buttons, alerts,\r\n                    background, etc.\r\n                </Card.Text>\r\n                <Row>\r\n                    {(variants || []).map((color, index) => {\r\n                        return (\r\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\r\n                                <div className={classNames('rounded', 'p-5', 'bg-' + color)}></div>\r\n                                <h6>{color}</h6>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Colors;\r\n","import { Card, Col, Row } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// types\r\nimport { Variant } from '../types';\r\n\r\ntype BackgroundsProps = {\r\n    variants: Variant[];\r\n};\r\n\r\nconst Backgrounds = ({ variants }: BackgroundsProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title as=\"h4\" className=\"my-0\">\r\n                    Background\r\n                </Card.Title>\r\n                <Card.Text className=\"sub-header\">\r\n                    Use the contexual class to have background with different shades. E.g.{' '}\r\n                    <code>\r\n                        .bg-{'{'}primary | secondary | success | danger | info | warning{'}'}\r\n                    </code>\r\n                </Card.Text>\r\n                <Row>\r\n                    {(variants || []).map((color, index) => {\r\n                        return (\r\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\r\n                                <div className={classNames('rounded', 'p-3', 'mb-3', 'mb-xl-0', 'bg-' + color)}>\r\n                                    <h5 className=\"text-white\">.bg-{color}</h5>\r\n                                </div>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n                <Card.Text className=\"sub-header mt-4\">\r\n                    Each color has a translucent shade too. It adds a little transparency. E.g.{' '}\r\n                    <code>\r\n                        .bg-soft-{'{'}primary | secondary | success | danger | info | warning{'}'}\r\n                    </code>\r\n                </Card.Text>\r\n                <Row>\r\n                    {(variants || []).map((color, index) => {\r\n                        return (\r\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\r\n                                <div className={classNames('rounded', 'p-3', 'mb-3', 'mb-xl-0', 'bg-soft-' + color)}>\r\n                                    <h5 className={classNames('text-' + color, 'my-0')}>.bg-soft-{color}</h5>\r\n                                </div>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Backgrounds;\r\n","import { Card, Col, Row } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// types\r\nimport { Variant } from '../types';\r\n\r\ntype TextColorsProps = {\r\n    variants: Variant[];\r\n};\r\n\r\nconst TextColors = ({ variants }: TextColorsProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title as=\"h4\" className=\"my-0\">\r\n                    Text Colors\r\n                </Card.Title>\r\n                <Card.Text className=\"sub-header\">\r\n                    Even your text can have the contexual color. E.g.{' '}\r\n                    <code>\r\n                        .text-{'{'}primary | secondary | success | danger | info | warning{'}'}\r\n                    </code>\r\n                </Card.Text>\r\n                <Row>\r\n                    {(variants || []).map((color, index) => {\r\n                        return (\r\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\r\n                                <div className=\"bg-white rounded p-2\"></div>\r\n                                <h5 className={classNames('text-' + color)}>.text-{color}</h5>\r\n                            </Col>\r\n                        );\r\n                    })}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default TextColors;\r\n","import { Col, Row } from 'react-bootstrap';\r\n\r\n// components\r\nimport DocsLayout from '../layout';\r\n\r\nimport Colors from './Colors';\r\nimport Backgrounds from './Backgrounds';\r\nimport TextColors from './TextColors';\r\n\r\n// types\r\nimport { Variant } from '../types';\r\n\r\nconst variants: Variant[] = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\r\n\r\nconst ColorsExample = () => {\r\n    return (\r\n        <DocsLayout>\r\n            <Col xl={10} lg={9}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Colors variants={variants} />\r\n                        <Backgrounds variants={variants} />\r\n                        <TextColors variants={variants} />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </DocsLayout>\r\n    );\r\n};\r\n\r\nexport default ColorsExample;\r\n"],"names":["variants","Card","as","className","Row","map","color","index","Col","md","xl","classNames","toString","lg","xs"],"sourceRoot":""}