{"version":3,"file":"static/js/8314.ebe7c719.chunk.js","mappings":"wLA+FA,UA1FgB,WACZ,OACI,SAAC,IAAD,WACI,SAAC,IAAD,CAAKA,GAAI,GAAIC,GAAI,EAAjB,UACI,SAAC,IAAD,WACI,SAAC,IAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,WACI,UAAC,SAAD,YACI,SAAC,UAAD,CAAYC,GAAG,KAAf,sBACA,yEACkD,KAC9C,cAAGC,KAAK,2BAA2BC,OAAO,SAASC,IAAI,aAAvD,6BAFJ,QAOA,qHAKA,gBAAKC,UAAU,SAAf,UACI,2BACI,mCACS,mDADT,uCAEI,wBACI,oHAMR,2EACiD,mCADjD,OACuE,KACnE,uCACA,wBACI,4BACK,IADL,wDACkE,IADlE,YAEc,IAFd,OAE0B,IAF1B,UAKJ,0EACA,2BACI,2BACI,qCADJ,2BAGA,2BACI,wCADJ,6GAIA,yBACI,+IAEwD,KACpD,2CAHJ,oBAG+C,KAC3C,2CAJJ,wBAKI,4CACmB,2CADnB,iQAKgE,KAC5D,sCANJ,iCAexB,gBAAKA,UAAU,OAAf,UACI,SAAC,IAAD,CAAOC,QAAQ,GAAGD,UAAU,kBAA5B,8HAMJ,gBAAKA,UAAU,SAAf,UACI,oH,wRCxE9BE,GAAgBC,EAAAA,EAAAA,GAAiB,MACvCD,EAAcE,YAAc,gBAC5B,IAAMC,GAAeC,EAAAA,EAAAA,GAAmB,gBAAiB,CACvDC,UAAWL,IAEPM,GAAYF,EAAAA,EAAAA,GAAmB,aAAc,CACjDC,UAAWE,EAAAA,IAEPC,EAAe,CACnBT,QAAS,UACTU,MAAM,EACNC,WAAYC,EAAAA,EACZC,WAAY,eAERC,EAAqBC,EAAAA,YAAiB,SAACC,EAAmBC,GAC9D,OAYIC,EAAAA,EAAAA,IAAgBF,EAAmB,CACrCN,KAAM,YAZNS,EADF,EACEA,SACAT,EAFF,EAEEA,KACAG,EAHF,EAGEA,WACAO,EAJF,EAIEA,aACArB,EALF,EAKEA,UACAsB,EANF,EAMEA,SACArB,EAPF,EAOEA,QACAsB,EARF,EAQEA,QACAC,EATF,EASEA,YACAZ,EAVF,EAUEA,WACGa,GAXL,YAeMC,GAASC,EAAAA,EAAAA,IAAmBP,EAAU,SACtCQ,GAAcC,EAAAA,EAAAA,IAAiB,SAAAC,GAC/BP,GACFA,GAAQ,EAAOO,MAGbC,GAA4B,IAAfnB,EAAsBC,EAAAA,EAAOD,EAE1CoB,GAAqBC,EAAAA,EAAAA,MAAM,OAAD,QAAC,QAC/BC,KAAM,SACDH,OAAqBI,EAARV,GAFY,IAG9BP,IAAKA,EACLlB,UAAWoC,GAAAA,CAAWpC,EAAW0B,EAAQzB,GAAW,GAAJ,OAAOyB,EAAP,YAAiBzB,GAAWuB,GAAe,GAAJ,OAAOE,EAAP,iBACvFJ,SAAU,CAACE,IAA4Ba,EAAAA,EAAAA,KAAKC,EAAAA,EAAa,CACvDC,QAASX,EACT,aAAcd,EACdb,QAASoB,IACPC,MAGN,OAAKS,GACeM,EAAAA,EAAAA,KAAKN,GAAD,QAAC,QACvBS,eAAe,GACZf,GAFmB,IAGtBP,SAAKiB,EACLM,GAAI9B,EACJW,SAAUU,KANYrB,EAAOqB,EAAQ,QASzCjB,EAAMX,YAAc,QACpBW,EAAML,aAAeA,EACrB,IAAegC,OAAOC,OAAO5B,EAAO,CAClC6B,KAAMpC,EACNqC,QAASxC","sources":["pages/docs/Routing.tsx","../node_modules/react-bootstrap/esm/Alert.js"],"sourcesContent":["import { Alert, Card, Col, Row } from 'react-bootstrap';\r\n\r\n// component\r\nimport DocsLayout from './layout';\r\n\r\nconst Routing = () => {\r\n    return (\r\n        <DocsLayout>\r\n            <Col xl={10} lg={9}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h4\">Routing</Card.Title>\r\n                                <p>\r\n                                    Prompt React is having routing setup based on{' '}\r\n                                    <a href=\"https://reactrouter.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n                                        React-Router v6\r\n                                    </a>\r\n                                    .\r\n                                </p>\r\n                                <p>\r\n                                    You can easily add, change or remove any route by simply making changes described\r\n                                    below:\r\n                                </p>\r\n\r\n                                <div className=\"p-lg-1\">\r\n                                    <ol>\r\n                                        <li>\r\n                                            Open <code>src/routes/index.tsx</code> file, declare your component. E.g.\r\n                                            <p>\r\n                                                <code>\r\n                                                    const Dashboard2 = React.lazy(() =&gt;\r\n                                                    import('./pages/other/account/Dashboard'));\r\n                                                </code>\r\n                                            </p>\r\n                                        </li>\r\n                                        <li>\r\n                                            And make sure to add the entry for same with <code>path</code> and{' '}\r\n                                            <code>element</code>\r\n                                            <p>\r\n                                                <code>\r\n                                                    {'{'}path: 'dashboard', element: &lt;LoadComponent component={'{'}\r\n                                                    Dashboard{'}'} /&gt; {'}'},\r\n                                                </code>\r\n                                            </p>\r\n                                            <p>Each of these properties are explained below:</p>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <strong>path</strong> - Url relative path\r\n                                                </li>\r\n                                                <li>\r\n                                                    <strong>element</strong> - Lazily load component with actual\r\n                                                    component name which would get rendered when user visits the path\r\n                                                </li>\r\n                                                <ul>\r\n                                                    <li>\r\n                                                        If you want to restrict the non authenticated and unauthorized\r\n                                                        users to access particular path, specify element as{' '}\r\n                                                        <code>PrivateRoute</code>. The children of{' '}\r\n                                                        <code>PrivateRoute</code> will be restricted.\r\n                                                        <p>\r\n                                                            If you specify <code>PrivateRoute</code>, the application\r\n                                                            would check if the user is already authenticated or not and\r\n                                                            also validate if the user is having required role assigned\r\n                                                            to it, in order to access the specified path. In order to\r\n                                                            specify which roles are allowed, you can specify them using{' '}\r\n                                                            <strong>roles</strong> property.\r\n                                                        </p>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </ul>\r\n                                        </li>\r\n                                    </ol>\r\n                                </div>\r\n\r\n                                <div className=\"mt-1\">\r\n                                    <Alert variant=\"\" className=\"bg-soft-primary\">\r\n                                        Note that you don't need to restart the development server in order to see the\r\n                                        menu changes getting in effect\r\n                                    </Alert>\r\n                                </div>\r\n\r\n                                <div className=\"p-lg-3\">\r\n                                    <p>Optionally, you might want to add the nav menu entry in menu component.</p>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </DocsLayout>\r\n    );\r\n};\r\n\r\nexport default Routing;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});"],"names":["xl","lg","xs","as","href","target","rel","className","variant","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","show","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading"],"sourceRoot":""}