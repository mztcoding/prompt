{"version":3,"file":"static/js/4156.1b2f075c.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/@restart/ui/esm/useRootClose.js","../node_modules/@restart/ui/esm/Overlay.js","../node_modules/react-bootstrap/esm/Overlay.js","../node_modules/react-bootstrap/esm/useOverlayOffset.js","../node_modules/react-bootstrap/esm/OverlayTrigger.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/react-bootstrap/esm/helpers.js"],"sourcesContent":["import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useEffect } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useClickOutside, { getRefTarget } from './useClickOutside';\nconst escapeKeyCode = 27;\n\nconst noop = () => {};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger\n} = {}) {\n  const onClose = onRootClose || noop;\n  useClickOutside(ref, onClose, {\n    disabled,\n    clickTrigger\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    return () => {\n      removeKeyupListener();\n    };\n  }, [ref, disabled, handleKeyUp]);\n}\n\nexport default useRootClose;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || [])\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","import contains from 'dom-helpers/contains';\nimport * as React from 'react';\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport warning from 'warning';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Overlay from './Overlay';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction normalizeDelay(delay) {\n  return delay && typeof delay === 'object' ? delay : {\n    show: delay,\n    hide: delay\n  };\n} // Simple implementation of mouseEnter and mouseLeave.\n// React's built version is broken: https://github.com/facebook/react/issues/4251\n// for cases when the trigger is disabled and mouseOut/Over can cause flicker\n// moving from one child element to another.\n\n\nfunction handleMouseOverOut( // eslint-disable-next-line @typescript-eslint/no-shadow\nhandler, args, relatedNative) {\n  const [e] = args;\n  const target = e.currentTarget;\n  const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n  if ((!related || related !== target) && !contains(target, related)) {\n    handler(...args);\n  }\n}\n\nconst defaultProps = {\n  defaultShow: false,\n  trigger: ['hover', 'focus']\n};\n\nfunction OverlayTrigger({\n  trigger,\n  overlay,\n  children,\n  popperConfig = {},\n  show: propsShow,\n  defaultShow = false,\n  onToggle,\n  delay: propsDelay,\n  placement,\n  flip = placement && placement.indexOf('auto') !== -1,\n  ...props\n}) {\n  const triggerNodeRef = useRef(null);\n  const mergedRef = useMergedRefs(triggerNodeRef, children.ref);\n  const timeout = useTimeout();\n  const hoverStateRef = useRef('');\n  const [show, setShow] = useUncontrolledProp(propsShow, defaultShow, onToggle);\n  const delay = normalizeDelay(propsDelay);\n  const {\n    onFocus,\n    onBlur,\n    onClick\n  } = typeof children !== 'function' ? React.Children.only(children).props : {};\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const handleShow = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'show';\n\n    if (!delay.show) {\n      setShow(true);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'show') setShow(true);\n    }, delay.show);\n  }, [delay.show, setShow, timeout]);\n  const handleHide = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'hide';\n\n    if (!delay.hide) {\n      setShow(false);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'hide') setShow(false);\n    }, delay.hide);\n  }, [delay.hide, setShow, timeout]);\n  const handleFocus = useCallback((...args) => {\n    handleShow();\n    onFocus == null ? void 0 : onFocus(...args);\n  }, [handleShow, onFocus]);\n  const handleBlur = useCallback((...args) => {\n    handleHide();\n    onBlur == null ? void 0 : onBlur(...args);\n  }, [handleHide, onBlur]);\n  const handleClick = useCallback((...args) => {\n    setShow(!show);\n    onClick == null ? void 0 : onClick(...args);\n  }, [onClick, setShow, show]);\n  const handleMouseOver = useCallback((...args) => {\n    handleMouseOverOut(handleShow, args, 'fromElement');\n  }, [handleShow]);\n  const handleMouseOut = useCallback((...args) => {\n    handleMouseOverOut(handleHide, args, 'toElement');\n  }, [handleHide]);\n  const triggers = trigger == null ? [] : [].concat(trigger);\n  const triggerProps = {\n    ref: attachRef\n  };\n\n  if (triggers.indexOf('click') !== -1) {\n    triggerProps.onClick = handleClick;\n  }\n\n  if (triggers.indexOf('focus') !== -1) {\n    triggerProps.onFocus = handleFocus;\n    triggerProps.onBlur = handleBlur;\n  }\n\n  if (triggers.indexOf('hover') !== -1) {\n    process.env.NODE_ENV !== \"production\" ? warning(triggers.length > 1, '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the visibility of the overlay to just mouse users. Consider also including the `\"focus\"` trigger so that touch and keyboard only users can see the overlay as well.') : void 0;\n    triggerProps.onMouseOver = handleMouseOver;\n    triggerProps.onMouseOut = handleMouseOut;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [typeof children === 'function' ? children(triggerProps) : /*#__PURE__*/cloneElement(children, triggerProps), /*#__PURE__*/_jsx(Overlay, { ...props,\n      show: show,\n      onHide: handleHide,\n      flip: flip,\n      placement: placement,\n      popperConfig: popperConfig,\n      target: triggerNodeRef.current,\n      children: overlay\n    })]\n  });\n}\n\nOverlayTrigger.defaultProps = defaultProps;\nexport default OverlayTrigger;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {} // Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n\n  return bsDirection;\n}"],"names":["MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","fn","timeoutAtMs","delayMs","Date","now","current","setTimeout","useTimeout","isMounted","useMounted","useRef","useWillUnmount","clearTimeout","useMemo","clear","set","Badge","React","ref","bsPrefix","bg","pill","text","className","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","noop","onRootClose","disabled","clickTrigger","onClose","useClickOutside","handleKeyUp","useEventCallback","e","keyCode","useEffect","doc","ownerDocument","getRefTarget","currentEvent","defaultView","window","event","removeKeyupListener","listen","undefined","Overlay","outerRef","flip","offset","placement","containerPadding","popperConfig","Transition","transition","useCallbackRef","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","useMergedRefs","container","useWaitForDOMRef","target","useState","show","exited","setExited","popper","usePopper","mergeOptionsWithPopperConfig","enableEvents","mountOverlay","useRootClose","onHide","rootClose","rootCloseDisabled","rootCloseEvent","child","children","Object","assign","attributes","style","styles","arrowProps","arrow","onExit","onExiting","onEnter","onEntering","onEntered","in","appear","onExited","ReactDOM","Fade","overlay","outerProps","popperRef","customOffset","overlayRef","popoverClass","name","options","hasClass","Popover","useOverlayOffset","modifiers","actualTransition","BaseOverlay","concat","overlayProps","_popperObj$state","_popperObj$state$modi","popperObj","aRef","__wrapped","r","safeFindDOMNode","wrapRefs","updatedPlacement","state","scheduleUpdate","update","outOfBoundaries","modifiersData","hide","isReferenceHidden","handleMouseOverOut","handler","args","relatedNative","currentTarget","related","relatedTarget","nativeEvent","contains","OverlayTrigger","trigger","propsShow","defaultShow","onToggle","propsDelay","delay","indexOf","triggerNodeRef","timeout","hoverStateRef","useUncontrolledProp","setShow","normalizeDelay","onFocus","onBlur","onClick","handleShow","useCallback","handleHide","handleFocus","handleBlur","handleClick","handleMouseOver","handleMouseOut","triggers","triggerProps","onMouseOver","onMouseOut","_jsxs","_Fragment","cloneElement","createWithBsPrefix","body","decoratedBsPrefix","isRTL","useIsRTL","split","primaryPlacement","bsDirection","getOverlayDirection","role","PopoverBody","Header","PopoverHeader","Body","POPPER_OFFSET"],"sourceRoot":""}